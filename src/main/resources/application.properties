server.port=8084
server.servlet.context-path=/contents
spring.application.name=e-school-service-user-oauth2-resource

logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.security.oauth2=INFO

#JPA配置
spring.datasource.driver-class-name=${SERVICE_DATASOURCE_DRIVER:org.h2.Driver}
spring.datasource.url=${SERVICE_DATASOURCE_URL:jdbc:h2:mem:userService;MODE=MySQL}
spring.datasource.username=${SERVICE_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SERVICE_DATASOURCE_PASSWORD:123123}
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=1
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
#spring.datasource.username=demo
#spring.datasource.password=123123
#spring.datasource.hikari.maximum-pool-size=30
#spring.datasource.hikari.minimum-idle=1

# data-jpa config
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.globally_quoted_identifiers_skip_column_definitions=true
spring.jpa.properties.hibernate.hibernate.auto_quote_keyword=true
#spring.jpa.properties.hibernate.dialect=${SERVICE_DATASOURCE_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# batch_size默认为org.hibernate.dialect.DEFAULT_BATCH_SIZE=15
spring.jpa.properties.hibernate.jdbc.batch_size=5000
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

#项目启动执行SQL
spring.datasource.schema=classpath:schema.sql
spring.datasource.data=classpath:data.sql
spring.datasource.initialization-mode=ALWAYS

# h2 console
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
spring.h2.console.path=/h2

spring.security.oauth2.client.client-id=client
spring.security.oauth2.client.client-secret=secret
spring.security.oauth2.client.access-token-uri=http://localhost:8082/oauth/token
spring.security.oauth2.client.user-authorization-uri=http://localhost:8082/oauth/authorize
spring.security.oauth2.resource.token-info-uri=http://localhost:8082/oauth/check_token

#consul
spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
#设置需要注册到 consul 中
spring.cloud.consul.discovery.register=true
# 相当于eureka里的metadata-map
spring.cloud.consul.discovery.tags=version=1.0,author=Weison
# 健康检查的url，可以配置成/health或其它能检测出微服务运行状态的url
spring.cloud.consul.discovery.healthCheckPath=/contents/actuator/health
# healthcheck的时间间隔
spring.cloud.consul.discovery.healthCheckInterval=5s
# spring cloud官网文档的推荐，为了保证生成一个唯一的id ，也可以换成:${spring.application.name}:${spring.cloud.client.ipAddress}
# instanceId即为consul service列表中的service id
spring.cloud.consul.discovery.instanceId=${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
